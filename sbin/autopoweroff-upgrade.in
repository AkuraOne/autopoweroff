#!/usr/bin/python

# This scripts upgrades the /etc/autopoweroff.conf file automatically.
# ApoConfig.read() function supports old formats.  So we read the old
# configuration file and then call the ApoConfig.save() fonction to
# write over the file with the newest format.

import sys
import os
import shutil

scriptname = os.path.basename(sys.argv[0])

gTestMode = "@production@" != "true"

print scriptname + " started."

if gTestMode:
  # We are in test mode.  Using relative values.
  print "Test mode activated."
  etcdir      = "../etc"
  confdir     = etcdir + "/autopoweroff"
  sharedir    = ".."
  programname = "autopoweroff"
  version     = "Test version"
else:
  etcdir      = "@autopoweroff_etcdir@"
  confdir     = "@autopoweroff_confdir@"
  sharedir    = "@autopoweroff_sharedir@"
  programname = "@PACKAGE_NAME@"
  version     = "@VERSION@"

if not os.path.isdir(confdir):
  os.makedirs(confdir)
  os.makedirs(confdir + "/@PACKAGE_NAME@.d")

  shutil.move(etcdir + "/@PACKAGE_NAME@.conf",
              confdir + "/@PACKAGE_NAME@.conf")

sys.path.append(sharedir + '/python/modules')

import ApoConfig

configuration = ApoConfig.Configuration()
try:
  configuration.read()
except ApoConfig.APOWarning, message:
  # We ignore warning messages.
  pass
except ApoConfig.APOError, exception:
  if exception.errorcode != 1:
    print exception.msg
    sys.exit(1)

try:
  configuration.save()
except Exception, message:
  print message
  sys.exit(2)
